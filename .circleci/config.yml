version: 2.1

parameters:
  docker-container:
    type: string
    default: "estetic"
    description: "Docker container name for estetic of Dev"
  username:
    type: string
    default: "aksoft"
    description: "SSH host username"
  compose-file:
    type: string
    default: "compose.yml"
    description: "Docker compose filename"

jobs:
  deploy-to-dev:
    docker:
      - image: circleci/node:14
      - image: docker:20.10.9
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker Image
          command: |
            docker build -t << pipeline.parameters.docker-container >>:latest .
      - run:
          name: Compress Docker Image
          command: |
            docker save << pipeline.parameters.docker-container >>:latest | gzip > << pipeline.parameters.docker-container >>.tar.gz
      - run: ls -lh
      - persist_to_workspace:
          root: .
          paths:
            - << pipeline.parameters.docker-container >>.tar.gz
            - <<pipeline.parameters.compose-file>>
  transfer-and-run:
    docker:
      - image: circleci/node:14
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Install SSH And Configure
          command: |
            echo $SSH_PRIVATE_KEY | base64 --decode > ./id_rsa
            chmod 400 id_rsa
      - run:
          name: Stop Remote Docker-Compose
          command: |
            ssh -o "StrictHostKeyChecking=no" -i ./id_rsa <<pipeline.parameters.username>>@$HOST '
            if [ -f <<pipeline.parameters.compose-file>> ]; then
            docker-compose -f <<pipeline.parameters.compose-file>> down
            docker rmi << pipeline.parameters.docker-container >>:latest
            rm <<pipeline.parameters.compose-file>>
            else
            echo "<<pipeline.parameters.compose-file>> not found"
            fi
            '
      - run:
          name: Transfer Files
          command: |
            scp -o "StrictHostKeyChecking=no" -i ./id_rsa ./<< pipeline.parameters.docker-container >>.tar.gz ./<<pipeline.parameters.compose-file>> <<pipeline.parameters.username>>@$HOST:~/
      - run:
          name: Decompress Docker Image | Run Compose
          command: |
            ssh -o "StrictHostKeyChecking=no" -i ./id_rsa <<pipeline.parameters.username>>@$HOST '
            gunzip -c ./<< pipeline.parameters.docker-container >>.tar.gz | docker load;
            rm ./<< pipeline.parameters.docker-container >>.tar.gz;
            docker-compose -f <<pipeline.parameters.compose-file>> up -d;
            '
workflows:
  deploy-to-development:
    jobs:
      - deploy-to-dev:
          filters:
            branches:
              only:
                - development
      - transfer-and-run:
          requires:
            - deploy-to-dev
          filters:
            branches:
              only:
                - development
